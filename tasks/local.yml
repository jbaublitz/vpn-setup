---
- name: Get public IP of host
  uri:
    url: https://api.ipify.org
    return_content: yes
  register: public_ip
  when: "vpn_connected is undefined"
- name: Generate SSH key
  command: ssh-keygen -b {{ rsa_key_size }} -t rsa -f {{ ansible_ssh_private_key_file }}
  args:
    creates: "{{ ansible_ssh_private_key_file }}"
  when: "vpn_connected is undefined"
- name: Add SSH key
  digital_ocean_ssh_key:
    api_token: "{{ do_api_key }}"
    name: "{{ ansible_ssh_private_key_file | basename }}"
    ssh_pub_key: "{{ lookup('file', ssh_public_key_file) }}"
  register: ssh_key
  when: "vpn_connected is undefined"
- name: Create droplet
  digital_ocean:
    api_token: "{{ do_api_key }}"
    name: "{{ droplet_name }}"
    region_id: "{{ do_hosted_region | default('ams3') }}"
    image_id: ubuntu-18-04-x64
    size_id: s-1vcpu-1gb
    ssh_key_ids:
      - "{{ ssh_key.ssh_key.id }}"
  register: droplet
  when: "vpn_connected is undefined"
- name: Droplet firewall rules
  digital_ocean_firewall:
    api_token: "{{ do_api_key }}"
    name: "{{ droplet_name }}"
    inbound_rules:
      - protocol: tcp
        ports: 22
        sources:
          addresses:
            - "{{ public_ip.content }}"
      - protocol: tcp
        ports: 443
        sources:
          addresses:
            - 0.0.0.0/0
    outbound_rules:
      - protocol: tcp
        ports: 1-65535
        destinations:
          addresses:
            - 0.0.0.0/0
      - protocol: udp 
        ports: 1-65535
        destinations:
          addresses:
            - 0.0.0.0/0
    droplet_ids:
      - "{{ droplet.droplet.id }}"
  when: "vpn_connected is undefined"
- name: Register droplet in vpn group
  add_host:
    hostname: 10.10.10.1
    groups: vpn
  when: "vpn_connected is defined and vpn_connected == 'yes'"
- name: Get droplet IPv4 address
  digital_ocean_facts:
    api_token: "{{ do_api_key }}"
    name: "{{ droplet_name }}"
  register: droplet_for_ip
  until: 'droplet_for_ip.droplet.networks is defined'
  when: "vpn_connected is undefined"
- name: Register droplet in vpn group
  add_host:
    hostname: "{{ droplet_for_ip.droplet.networks.v4.0.ip_address }}"
    groups: vpn
  when: "vpn_connected is undefined"
