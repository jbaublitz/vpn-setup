---
- name: Install software
  apt:
    update_cache: yes
    name:
      - libpam-google-authenticator
      - openvpn
      - golang-cfssl

- name: Make vpn bundle dirs
  file:
    name: "{{ item }}"
    state: directory
  with_items:
    - /root/vpn
    - /root/vpn/certs
    - /root/vpn/config

- name: Install cfssl CSR config file
  template:
    src: templates/csr.json.j2
    dest: /root/vpn/config/csr.json
- name: Install cfssl CA config file
  template:
    src: templates/ca.json.j2
    dest: /root/vpn/config/ca.json
- name: Generate SSL CA
  shell: cfssl genkey -initca /root/vpn/config/csr.json | cfssljson -bare /root/vpn/certs/ca
  args:
    creates: /root/vpn/certs/ca.pem
- name: Generate SSL server
  shell: cfssl gencert -ca=/root/vpn/certs/ca.pem -ca-key=/root/vpn/certs/ca-key.pem \
         -config=/root/vpn/config/ca.json -profile="server" -hostname="server" \
         /root/vpn/config/csr.json | cfssljson -bare /root/vpn/certs/server
  args:
    creates: /root/vpn/certs/server.pem
- name: Generate SSL client
  shell: cfssl gencert -ca=/root/vpn/certs/ca.pem -ca-key=/root/vpn/certs/ca-key.pem \
         -config=/root/vpn/config/ca.json -profile="client" -hostname="client" \
         /root/vpn/config/csr.json | cfssljson -bare /root/vpn/certs/client
  args:
    creates: /root/vpn/certs/client.pem
- name: Generate DH params
  command: openssl dhparam -out /root/vpn/certs/dh2048.pem 2048
  args:
    creates: /root/vpn/certs/dh2048.pem
- name: Generate tls auth key
  command: openvpn --genkey --secret /root/vpn/certs/ta.key
  args:
    creates: /root/vpn/certs/ta.key

- name: Make openvpn user
  user:
    name: openvpn
    create_home: no
    shell: /usr/sbin/nologin
- name: Make keys/ directory in /etc/openvpn/server
  file:
    name: /etc/openvpn/server/keys
    state: directory
- name: Copy necessary private keys to /etc/openvpn/server
  copy:
    remote_src: yes
    src: "{{ item }}"
    dest: /etc/openvpn/server/keys
    mode: 0600
    owner: openvpn
    group: openvpn
  with_items:
    - /root/vpn/certs/server-key.pem
    - /root/vpn/certs/dh2048.pem
    - /root/vpn/certs/ta.key
- name: Copy necessary public keys to /etc/openvpn/server
  copy:
    remote_src: yes
    src: "{{ item }}"
    dest: /etc/openvpn/server/keys
    mode: 0644
    owner: openvpn
    group: openvpn
  with_items:
    - /root/vpn/certs/server.pem
    - /root/vpn/certs/ca.pem
- name: Generate OpenVPN config file
  template:
    src: templates/openvpn.conf.j2
    dest: /etc/openvpn/server.conf
  notify: 
    - Restart OpenVPN
- name: Start OpenVPN server
  systemd:
    name: openvpn@server
    state: started
- name: sysctl ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
- name: Add iptables masquerade
  iptables:
    action: append
    chain: POSTROUTING
    table: nat
    out_interface: eth0
    jump: MASQUERADE

- name: Generate client OpenVPN config file
  template:
    src: templates/openvpn-client.conf.j2
    dest: /root/openvpn.conf
- name: Copy OpenVPN files to local host
  fetch:
    src: "{{ item }}"
    dest: "{{ lookup('env', 'HOME') }}/"
    flat: yes
  with_items:
    - /root/openvpn.conf
    - /root/vpn/certs/ca.pem
    - /root/vpn/certs/client.pem
    - /root/vpn/certs/client-key.pem
    - /root/vpn/certs/ta.key
